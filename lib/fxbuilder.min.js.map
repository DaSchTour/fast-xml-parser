{"version":3,"file":"./lib/fxbuilder.min.js","mappings":"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","sources":["webpack://XMLBuilder/./src/xmlbuilder/json2xml.js","webpack://XMLBuilder/./src/xmlbuilder/orderedJs2Xml.js","webpack://XMLBuilder/webpack/bootstrap","webpack://XMLBuilder/webpack/startup"],"sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: {\n    '>': {regex: new RegExp('>', 'g'), val: '&gt;'},\n    '<': {regex: new RegExp('<', 'g'), val: '&lt;'},\n    sQuot: {regex: new RegExp(\"'\", 'g'), val: '&apos;'},\n    dQuot: {regex: new RegExp('\"', 'g'), val: '&quot;'},\n  },\n  processEntities: true,\n  stopNodes: [],\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    if (typeof this.options.format === 'object') {\n      this.tagEndChar = this.options.format.tagEndChar || '>\\n';\n      this.newLine = this.options.format.newLine || '\\n';\n    } else {\n      this.tagEndChar = '>\\n';\n      this.newLine = '\\n';\n    }\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if (this.options.preserveOrder) {\n    return buildFromOrderedJs(jObj, this.options);\n  } else {\n    if (Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1) {\n      jObj = {\n        [this.options.arrayNodeName]: jObj,\n      };\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        let val = this.options.attributeValueProcessor(attr, '' + jObj[key]);\n        val = this.replaceEntitiesValue(val);\n        attrStr += ' ' + attr + '=\"' + val + '\"';\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level);\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          let val = this.options.attributeValueProcessor(Ks[j], '' + jObj[key][Ks[j]]);\n          val = this.replaceEntitiesValue(val);\n          attrStr += ' ' + Ks[j] + '=\"' + val + '\"';\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction processTextOrObjNode(object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(result.val, key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && val.indexOf('<') === -1) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  let textValue = this.options.tagValueProcessor(key, val);\n  textValue = this.replaceEntitiesValue(textValue);\n\n  return this.indentate(level) + '<' + key + attrStr + '>' + textValue + '</' + key + this.tagEndChar;\n}\n\nfunction replaceEntitiesValue(textValue) {\n  if (textValue && textValue.length > 0 && this.options.processEntities) {\n    for (const entityName in this.options.entities) {\n      const entity = this.options.entities[entityName];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val === '' && this.options.unpairedTags.indexOf(key) !== -1) {\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar;\n  } else if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = '\\n';\n\n/**\n *\n * @param {array} jArray\n * @param {any} options\n * @returns\n */\nfunction toXml(jArray, options) {\n  return arrToStr(jArray, options, '', 0);\n}\n\nfunction arrToStr(arr, options, jPath, level) {\n  let xmlStr = '';\n\n  let indentation = '';\n  if (options.format && options.indentBy.length > 0) {\n    //TODO: this logic can be avoided for each call\n    indentation = '' + options.indentBy.repeat(level);\n  }\n\n  const textNode = arr.some((obj) => Object.keys(obj).includes('#text'));\n\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const tagName = propName(tagObj);\n    let newJPath = '';\n    if (jPath.length === 0) newJPath = tagName;\n    else newJPath = `${jPath}.${tagName}`;\n\n    if (tagName === options.textNodeName) {\n      let tagText = tagObj[tagName];\n      if (!isStopNode(newJPath, options)) {\n        tagText = options.tagValueProcessor(tagName, tagText);\n        tagText = replaceEntitiesValue(tagText, options);\n      }\n      xmlStr += tagText;\n      continue;\n    } else if (tagName === options.cdataPropName) {\n      xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n      continue;\n    } else if (tagName === options.commentPropName) {\n      xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n      continue;\n    } else if (tagName.startsWith('?')) {\n      const attStr = attr_to_str(tagObj[':@'], options);\n      xmlStr += indentation + `<${tagName}${tagObj[tagName][0][options.textNodeName]}${attStr}?>` + EOL;\n      continue;\n    }\n    const attStr = attr_to_str(tagObj[':@'], options);\n    let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n    let tagStart = `${textNode ? ' ' : indentation}<${tagName}${attStr}`;\n    if (options.unpairedTags.indexOf(tagName) !== -1) {\n      xmlStr += tagStart + '>' + EOL;\n    } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n      xmlStr += tagStart + '/> ';\n    } else if (tagValue.trimStart().startsWith('<') && tagValue.trimEnd().endsWith('>')) {\n      //TODO: node with only text value should not parse the text value in next line\n      xmlStr += tagStart + `>${EOL}${tagValue}${indentation}</${tagName}>${i < arr.length ? EOL : ''}`;\n    } else {\n      xmlStr += tagStart + `>${tagValue}</${tagName}>${i < arr.length ? EOL : ''}`;\n    }\n  }\n\n  return xmlStr;\n}\n\nfunction propName(obj) {\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if (key !== ':@') return key;\n  }\n}\n\nfunction attr_to_str(attrMap, options) {\n  let attrStr = '';\n  if (attrMap && !options.ignoreAttributes) {\n    for (let attr in attrMap) {\n      let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n      attrVal = replaceEntitiesValue(attrVal, options);\n      if (attrVal === true && options.suppressBooleanAttributes) {\n        attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n      } else {\n        attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n      }\n    }\n  }\n  return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n  jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n  let tagName = jPath.substr(jPath.lastIndexOf('.') + 1);\n  for (let index in options.stopNodes) {\n    if (options.stopNodes[index] === jPath || options.stopNodes[index] === '*.' + tagName) return true;\n  }\n  return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n  if (textValue && textValue.length > 0 && options.processEntities) {\n    for (const entityName in options.entities) {\n      const entity = options.entities[entityName];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\nmodule.exports = toXml;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(784);\n"],"names":["buildFromOrderedJs","require","defaultOptions","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressBooleanAttributes","tagValueProcessor","key","a","attributeValueProcessor","attrName","preserveOrder","commentPropName","unpairedTags","entities","regex","RegExp","val","sQuot","dQuot","processEntities","stopNodes","Builder","options","this","Object","assign","isAttribute","attrPrefixLen","length","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","object","level","result","j2x","undefined","keys","attrStr","indexOf","textValue","entityName","entity","replace","repeat","name","startsWith","substr","prototype","build","jObj","Array","isArray","arrayNodeName","Date","attr","newval","arrLen","j","item","Ks","L","module","exports","EOL","arrToStr","arr","jPath","xmlStr","indentation","textNode","some","obj","includes","i","newJPath","tagObj","tagName","propName","attStr","attr_to_str","tagValue","tagStart","trimStart","trimEnd","endsWith","tagText","isStopNode","attrMap","attrVal","lastIndexOf","index","jArray","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}